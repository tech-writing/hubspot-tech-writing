# ==================
# Project definition
# ==================

# Derived from https://peps.python.org/pep-0621/

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.0"

[project]
name = "hubspot-tech-writing"
description = "Support technical writing on HubSpot using Markdown."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache License 2.0"}
keywords = [
  "html",
  "hubspot",
  "markdown",
  "tech-writing",
]
authors = [
  {name = "Andreas Motl", email = "andreas.motl@crate.io"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Communications",
  "Topic :: Education",
  "Topic :: Software Development :: Libraries",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: Markup",
  "Topic :: Text Processing :: Markup :: HTML",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Topic :: Utilities",
]

dynamic = [
  "version",
]

dependencies = [
  "beautifulsoup4<5",
  "click<9",
  "click-aliases<2",
  "colorlog<7",
  "hubspot-api-client<9",
  "markdown<4",
  "mkdocs-linkcheck<2",
  "pathlibfs<0.6",
  "requests<3",
  "yarl<2",
]

[project.optional-dependencies]
develop = [
  "black<25",
  "mypy<1.11",
  "poethepoet<1",
  "pyproject-fmt<2.2",
  "ruff<0.5",
  "validate-pyproject<0.22",
]
release = [
  "build<2",
  "twine<6",
]
test = [
  "pytest<9",
  "pytest-cov<6",
  "pytest-mock<4",
]
[project.scripts]
hstw = "hubspot_tech_writing.cli:cli"
[tool.setuptools]
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
packages = ["hubspot_tech_writing"]

[project.urls]
changelog = "https://github.com/crate-workbench/hubspot-tech-writing/blob/main/CHANGES.md"
documentation = "https://github.com/crate-workbench/hubspot-tech-writing"
homepage = "https://github.com/crate-workbench/hubspot-tech-writing"
repository = "https://github.com/crate-workbench/hubspot-tech-writing"
[tool.black]
line-length = 120

# extend-exclude = ""

[tool.isort]
profile = "black"
skip_glob = "**/site-packages/**"
skip_gitignore = false

[tool.pytest.ini_options]
minversion = "2.0"
addopts = """
  -rfEX -p pytester --strict-markers --verbosity=3
  --cov --cov-report=term-missing --cov-report=xml
  """
log_level = "DEBUG"
log_cli_level = "DEBUG"
testpaths = ["tests"]
xfail_strict = true
markers = [
]

[tool.coverage.run]
branch = false
source = ["hubspot_tech_writing"]
omit = [
    "tests/*",
]

[tool.coverage.report]
fail_under = 0
show_missing = true

[tool.mypy]
packages = ["hubspot_tech_writing"]
exclude = [
]
check_untyped_defs = true
ignore_missing_imports = true
implicit_optional = true
install_types = true
no_implicit_optional = true
non_interactive = true
show_error_codes = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.ruff]
line-length = 120

lint.select = [
  # Bandit
  "S",
  # Bugbear
  "B",
  # Builtins
  "A",
  # comprehensions
  "C4",
  # eradicate
  "ERA",
  # flake8-2020
  "YTT",
  # isort
  "I",
  # pandas-vet
  "PD",
  # print
  "T20",
  # Pycodestyle
  "E",
  "W",
  # Pyflakes
  "F",
  # return
  "RET",
]

extend-exclude = [
  "example_*",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Use of `assert` detected


# ===================
# Tasks configuration
# ===================

[tool.poe.tasks]
format = [
  { cmd = "black ." },
  # Configure Ruff not to auto-fix (remove!):
  # Ignore unused imports (F401), unused variables (F841), `print` statements (T201), and commented-out code (ERA001).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 --ignore=ERA001 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]

lint = [
  { cmd = "ruff check ." },
  { cmd = "black --check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  { cmd = "mypy" },
]
test = [
  { cmd = "pytest" },
]
test-fast = [
  { cmd = "pytest -m 'not slow'" },
]
build = { cmd = "python -m build" }
check = ["lint", "test"]
check-fast = ["lint", "test-fast"]

release = [
  { cmd = "python -m build" },
  { cmd = "twine upload --skip-existing dist/*.tar.gz dist/*.whl" },
]
